{% extends 'frontend/base.html.twig' %}

{% block stylesheets %}
    <link rel="stylesheet" href={{ asset('styles/frontend/apartments/apartmentCreate.css') }}>
    <link href="https://api.mapbox.com/mapbox-gl-js/v3.2.0/mapbox-gl.css" rel="stylesheet">
    <script src="https://api.mapbox.com/mapbox-gl-js/v3.2.0/mapbox-gl.js"></script>
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.min.js"></script>
    <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.css" type="text/css">
    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
{% endblock %}

{% block activeCreaServ %}active{% endblock %}

{% block body %}
<div class="container-fluid pageContent">
    {{form_start(form)}}
    <div class="row">
        <div class="mainImg p-0" id="preview">
            <label for="form_mainPict" class="drop-container" id="dropcontainer">
                <span class="drop-title">Déposer votre fichier ici</span>
                ou
                {{ form_widget(form.mainPict) }}
            </label>
        </div>
    </div>
    <div class="mainInfos">
        <div class="row">
            <div class="col-12 inputs">
                <div class="input inputServ">
                    <h4>Nom de votre service</h4>
                    <p>(Entre 0 et 50 caractères)</p>
                    {{ form_widget(form.name) }}
                </div>
                <div class="input inputServ">
                    <h4>Catégorie</h4>
                    <p>Séléctionner parmi cette liste la catégorie à laquelle votre service correspond pour aider le client</p>
                    {{ form_widget(form.category) }}
                </div>
                <div class="input inputServ">
                    <h4>Entrée d'adresse</h4>
                    <p>Combien voulez vous que le client fournisse d'adresse (ex: déménagement, taxi ... nécessite 2 adresses)</p>
                    {{ form_widget(form.addressInputs) }}
                </div>
                <div class="input inputServ">
                    <h4>Prix</h4>
                    <p>Si vide : sur devis</p>
                    {{ form_widget(form.price) }}
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-12 inputs inputDescRow">
                <div class="input inputDesc">
                    <h4>Description de votre service</h4>
                    <p>(Entre 50 et 500 caractères)</p>
                    {{ form_widget(form.description) }}
                </div>
                <div class="input inputServ mt-3">
                    <h4 class="mb-3">Disponibilités</h4>
                    {{ form_widget(form.daysOfWeek) }}
                </div>
                <div class="input inputServ mt-3">
                    <h4>Horaire de début</h4>
                    {{ form_widget(form.startTime) }}
                </div>
                <div class="input inputServ mt-3">
                    <h4>Horaire de fin</h4>
                    {{ form_widget(form.endTime) }}
                </div>
            </div>
        </div>
        <hr class="mt-5">
        
        <div class="col-12 d-flex mt-5" style="align-items: center;">
            <div class="input inputServ" style="float: left; width: 20%;">
                <h4>Mail de votre entreprise</h4>
                <p>Nous vous rappelons que c'est à ce mail que vous recevrez réservations et devis</p>
                {{ form_widget(form.companyEmail) }}
            </div>
            <div class="col-3"> 
                <h4 style="height: 3vh;">Date d'indisponibilité</h4>
                <input type="text" name="daterange" value="" class="mt-3 inputIndispo">
                <div id="selectedDates" style="height: 200px; overflow-y: scroll;"></div>
                {{form_widget(form.indisponibilities)}}
            </div>
            <button type="submit" class="validBtn" style="height: 6vh; margin-left: calc(30% - 31px); transform: translateX(-50%);">Valider</button>
        </div>
        {{form_end(form)}}
    </div>
</div>
{% endblock %}

{% block javascripts %}

<script>

    $(function() {
        var selectedDates = [];
        var indispo = document.getElementById('form_indisponibilities');

        $('input[name="daterange"]').daterangepicker({
            isInvalidDate: function(date) {
                if (date.isBefore(moment(), 'day')) {
                    return true;
                }

                for (var i = 0; i < selectedDates.length; i++) {
                    var range = selectedDates[i].split(' à ');
                    var startDate = moment(range[0], 'DD/MM/YYYY');
                    var endDate = moment(range[1], 'DD/MM/YYYY');
                    if (date.isBetween(startDate, endDate, null, '[]')) {
                        return true;
                    }
                }
                return false;
            },
            opens: 'left'
        }, function(start, end, label) {
            console.log("ouiii");
            var selectedDate = start.format('DD/MM/YYYY') + ' à ' + end.format('DD/MM/YYYY');
            addDateToList(selectedDate); 
        });

        function addDateToList(date) {
            var $dateSpan = $('<span>', {
                text: date
            });

            var $removeButton = $('<button>', {
                text: 'X',
                click: function() {
                    $dateSpan.remove();
                    var index = selectedDates.indexOf(date);
                    if (index > -1) {
                        selectedDates.splice(index, 1);
                    }
                }
            });

            $dateSpan.append($removeButton);

            $('#selectedDates').append($dateSpan);
            selectedDates.push(date);
            $('#form_indisponibilities').val(selectedDates.join(','))
        }
    });


    var ids = [
        { input: "form_mainPict", preview: "preview" },
        { input: "form_pict1", preview: "preview1" },
        { input: "form_pict2", preview: "preview2" },
        { input: "form_pict3", preview: "preview3" },
        { input: "form_pict4", preview: "preview4" },
        { input: "form_pict5", preview: "preview5" },
        { input: "form_pict6", preview: "preview6" },
        { input: "form_pict7", preview: "preview7" },
        { input: "form_pict8", preview: "preview8" },
        { input: "form_pict9", preview: "preview9" },
        { input: "form_pict10", preview: "preview10" },
    ];

    var images = [
        "{{ mainPict }}"
    ]

    images.forEach(function(img) {
        if (img != null){
            var input = document.getElementById(ids[images.indexOf(img)].input);
            var preview = document.getElementById(ids[images.indexOf(img)].preview);
            updatePreview(input, preview, img);
        }
    })

    ids.forEach(function(id) {
        var input = document.getElementById(id.input);
        var preview = document.getElementById(id.preview);
        
        input.addEventListener("change", function () {
            updatePreview(this, preview);
        });
    });

    function updatePreview(input, preview, url = null) {
        var file = input.files[0];
        
        if (file) {
            var reader = new FileReader();

            reader.addEventListener("load", function () {
                preview.style.backgroundImage = "url('" + reader.result + "')";
                preview.style.backgroundColor = "#ffffff";
                preview.style.border = "none";
            });

            reader.readAsDataURL(file);
        }

        if (url) {
            preview.style.backgroundImage = "url('" + url + "')";
            preview.style.backgroundColor = "#ffffff";
            preview.style.border = "none";
        }
    }

    var dropContainer = document.getElementById("dropcontainer");

    dropContainer.addEventListener("dragover", (e) => {
        e.preventDefault();
    }, false);

    dropContainer.addEventListener("dragenter", () => {
        dropContainer.classList.add("drag-active");
    });

    dropContainer.addEventListener("dragleave", () => {
        dropContainer.classList.remove("drag-active");
    });

    dropContainer.addEventListener("drop", (e) => {
        e.preventDefault();
        dropContainer.classList.remove("drag-active");
        input.files = e.dataTransfer.files;
        updatePreview(input);
    });

    mapboxgl.accessToken = 'pk.eyJ1IjoibGVvLXVyYWhhcmEiLCJhIjoiY2x2MTJrcHJ4MDIwdzJrdXNhcDhjazF4MSJ9.ZJjs_hvEVTuHKAe2CeDGbQ';
    const geocoder = new MapboxGeocoder({
        accessToken: mapboxgl.accessToken,
        countries: 'fr',
        bbox: [-5.3173828125, 41.27780646738183, 9.84375, 51.12421275782688],
        types: 'address',
        mapboxgl: mapboxgl
    });
    geocoder.addTo('#geocoder');

    const results = document.getElementById('form_address');
    geocoder.on('result', (e) => {
        results.value = JSON.stringify(e.result, null, 2);
    });

    geocoder.on('clear', () => {
        results.value = '';
    });
</script>
{% endblock %}